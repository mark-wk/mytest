apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: myTest
    tier: backend
    project: danone
  name: myTest-deployment
  namespace: myTest
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: myTest
      tier: backend
      project: danone
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: myTest
        tier: backend
        project: myTest
    spec:
      containers:
        - env:
            - name: active
              value: test
          image: $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:$APP_VERSION$BUILD_NUMBER
          imagePullPolicy: IfNotPresent
          name: myTest
          ports:
            - containerPort: 8080
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 80
            periodSeconds: 30
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /user/index/isLive?params=666
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 80
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 3        
      imagePullSecrets:
        - name: docker-hub
        - name: docker-hub2
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: danone-user-svc
#   namespace: danone-test
# spec:
#   type: NodePort
#   selector:
#     project: danone
#     app: danone-user
#   ports:
#   - name: http
#     port: 29200
#     targetPort: 29200